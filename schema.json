{
  "$ref": "#/definitions/IConfig",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "AllowedObjectTypesConf": {
      "additionalProperties": false,
      "description": "Restricts the set of allowed object types.",
      "properties": {
        "allowed": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "allowed"
      ],
      "type": "object"
    },
    "AmbiguousStatementConf": {
      "additionalProperties": false,
      "description": "Checks for ambiguity between deleting from internal and database table",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AvoidUseConf": {
      "additionalProperties": false,
      "description": "Detects usage of certain statements.",
      "properties": {
        "communication": {
          "description": "Detects communication",
          "type": "boolean"
        },
        "define": {
          "description": "Detects define (macro definitions)",
          "type": "boolean"
        },
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "endselect": {
          "description": "Detects endselect",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "execSQL": {
          "description": "Detects execSQL (dynamic SQL)",
          "type": "boolean"
        },
        "kernelCall": {
          "description": "Detects kernel calls",
          "type": "boolean"
        },
        "statics": {
          "description": "Detects statics",
          "type": "boolean"
        }
      },
      "required": [
        "define",
        "endselect",
        "execSQL",
        "kernelCall",
        "communication",
        "statics"
      ],
      "type": "object"
    },
    "BeginEndNamesConf": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BreakpointConf": {
      "additionalProperties": false,
      "description": "Detects usage of code-based breakpoints.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CheckTransformationExistsConf": {
      "additionalProperties": false,
      "description": "Checks that used XSLT transformations exist.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CheckVariablesConf": {
      "additionalProperties": false,
      "description": "Enables variable resolution",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ClassAttributeNamesConf": {
      "additionalProperties": false,
      "description": "Allows you to enforce a pattern, such as a prefix, for class variable names.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreExceptions": {
          "type": "boolean"
        },
        "instance": {
          "description": "The pattern for instance variable names",
          "type": "string"
        },
        "statics": {
          "description": "The pattern for static variable names",
          "type": "string"
        }
      },
      "required": [
        "ignoreExceptions",
        "statics",
        "instance"
      ],
      "type": "object"
    },
    "CloudTypesConf": {
      "additionalProperties": false,
      "description": "Checks that the package does not contain any object types unsupported in cloud ABAP.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ColonMissingSpaceConf": {
      "additionalProperties": false,
      "description": "Checks for missing spaces after colons in chained statements.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CommentedCodeConf": {
      "additionalProperties": false,
      "description": "Detects usage of commented out code.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ConstructorVisibilityPublicConf": {
      "additionalProperties": false,
      "description": "Constructor must be placed in the public section, even if the class is not CREATE PUBLIC.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ContainsTabConf": {
      "additionalProperties": false,
      "description": "Checks for usage of tabs (enable to enforce spaces).",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DefinitionsTopConf": {
      "additionalProperties": false,
      "description": "Checks that definitions are placed at the beginning of methods.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DescriptionEmptyConf": {
      "additionalProperties": false,
      "description": "Ensures descriptions in class metadata exist.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DoubleSpaceConf": {
      "additionalProperties": false,
      "description": "Checks that only a single space follows certain common statements.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "endParen": {
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "keywords": {
          "type": "boolean"
        },
        "startParen": {
          "type": "boolean"
        }
      },
      "required": [
        "keywords",
        "startParen",
        "endParen"
      ],
      "type": "object"
    },
    "EmptyLineinStatementConf": {
      "additionalProperties": false,
      "description": "Checks that statements do not contain empty lines.",
      "properties": {
        "allowChained": {
          "type": "boolean"
        },
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "allowChained"
      ],
      "type": "object"
    },
    "EmptyStatementConf": {
      "additionalProperties": false,
      "description": "Checks for empty statements (an empty statement is a single dot)",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EmptyStructureConf": {
      "additionalProperties": false,
      "description": "Checks that the code does not contain empty blocks.",
      "properties": {
        "at": {
          "description": "Checks for empty at blocks",
          "type": "boolean"
        },
        "case": {
          "description": "Checks for empty case blocks",
          "type": "boolean"
        },
        "do": {
          "description": "Checks for empty do blocks",
          "type": "boolean"
        },
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "if": {
          "description": "Checks for empty if blocks",
          "type": "boolean"
        },
        "loop": {
          "description": "Checks for empty loop blocks",
          "type": "boolean"
        },
        "select": {
          "description": "Checks for empty select blockss",
          "type": "boolean"
        },
        "while": {
          "description": "Checks for empty while blocks",
          "type": "boolean"
        }
      },
      "required": [
        "loop",
        "if",
        "while",
        "case",
        "select",
        "do",
        "at"
      ],
      "type": "object"
    },
    "ExitOrCheckConf": {
      "additionalProperties": false,
      "description": "Detects usages of EXIT or CHECK statements outside of loops.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ExportingConf": {
      "additionalProperties": false,
      "description": "Detects EXPORTING statements which can be omitted.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FormTablesObsoleteConf": {
      "additionalProperties": false,
      "description": "Checks for TABLES parameters in forms.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FunctionalWritingConf": {
      "additionalProperties": false,
      "description": "Detects usage of call method when functional style calls can be used.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreExceptions": {
          "type": "boolean"
        }
      },
      "required": [
        "ignoreExceptions"
      ],
      "type": "object"
    },
    "GlobalClassConf": {
      "additionalProperties": false,
      "description": "Checks related to names of global classes. For the name pattern, see rule object_naming",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IConfig": {
      "additionalProperties": false,
      "properties": {
        "dependencies": {
          "items": {
            "$ref": "#/definitions/IDependency"
          },
          "type": "array"
        },
        "global": {
          "$ref": "#/definitions/IGlobalConfig"
        },
        "rules": {
          "additionalProperties": false,
          "properties": {
            "7bit_ascii": {
              "$ref": "#/definitions/SevenBitAsciiConf"
            },
            "allowed_object_types": {
              "$ref": "#/definitions/AllowedObjectTypesConf"
            },
            "ambiguous_statement": {
              "$ref": "#/definitions/AmbiguousStatementConf"
            },
            "avoid_use": {
              "$ref": "#/definitions/AvoidUseConf"
            },
            "begin_end_names": {
              "$ref": "#/definitions/BeginEndNamesConf"
            },
            "breakpoint": {
              "$ref": "#/definitions/BreakpointConf"
            },
            "check_transformation_exists": {
              "$ref": "#/definitions/CheckTransformationExistsConf"
            },
            "check_variables": {
              "$ref": "#/definitions/CheckVariablesConf"
            },
            "class_attribute_names": {
              "$ref": "#/definitions/ClassAttributeNamesConf"
            },
            "cloud_types": {
              "$ref": "#/definitions/CloudTypesConf"
            },
            "colon_missing_space": {
              "$ref": "#/definitions/ColonMissingSpaceConf"
            },
            "commented_code": {
              "$ref": "#/definitions/CommentedCodeConf"
            },
            "constructor_visibility_public": {
              "$ref": "#/definitions/ConstructorVisibilityPublicConf"
            },
            "contains_tab": {
              "$ref": "#/definitions/ContainsTabConf"
            },
            "definitions_top": {
              "$ref": "#/definitions/DefinitionsTopConf"
            },
            "description_empty": {
              "$ref": "#/definitions/DescriptionEmptyConf"
            },
            "double_space": {
              "$ref": "#/definitions/DoubleSpaceConf"
            },
            "empty_line_in_statement": {
              "$ref": "#/definitions/EmptyLineinStatementConf"
            },
            "empty_statement": {
              "$ref": "#/definitions/EmptyStatementConf"
            },
            "empty_structure": {
              "$ref": "#/definitions/EmptyStructureConf"
            },
            "exit_or_check": {
              "$ref": "#/definitions/ExitOrCheckConf"
            },
            "exporting": {
              "$ref": "#/definitions/ExportingConf"
            },
            "form_tables_obsolete": {
              "$ref": "#/definitions/FormTablesObsoleteConf"
            },
            "functional_writing": {
              "$ref": "#/definitions/FunctionalWritingConf"
            },
            "global_class": {
              "$ref": "#/definitions/GlobalClassConf"
            },
            "identical_form_names": {
              "$ref": "#/definitions/IdenticalFormNamesConf"
            },
            "if_in_if": {
              "$ref": "#/definitions/IfInIfConf"
            },
            "implement_methods": {
              "$ref": "#/definitions/ImplementMethodsConf"
            },
            "in_statement_indentation": {
              "$ref": "#/definitions/InStatementIndentationConf"
            },
            "indentation": {
              "$ref": "#/definitions/IndentationConf"
            },
            "inline_data_old_versions": {
              "$ref": "#/definitions/InlineDataOldVersionsConf"
            },
            "keywords_upper": {
              "$ref": "#/definitions/KeywordsUpperConf"
            },
            "line_length": {
              "$ref": "#/definitions/LineLengthConf"
            },
            "line_only_punc": {
              "$ref": "#/definitions/LineOnlyPuncConf"
            },
            "local_class_naming": {
              "$ref": "#/definitions/LocalClassNamingConf"
            },
            "local_testclass_location": {
              "$ref": "#/definitions/LocalTestclassLocationConf"
            },
            "local_variable_names": {
              "$ref": "#/definitions/LocalVariableNamesConf"
            },
            "main_file_contents": {
              "$ref": "#/definitions/MainFileContentsConf"
            },
            "max_one_statement": {
              "$ref": "#/definitions/MaxOneStatementConf"
            },
            "message_exists": {
              "$ref": "#/definitions/MessageExistsConf"
            },
            "method_length": {
              "$ref": "#/definitions/MethodLengthConf"
            },
            "method_parameter_names": {
              "$ref": "#/definitions/MethodParameterNamesConf"
            },
            "mix_returning": {
              "$ref": "#/definitions/MixReturningConf"
            },
            "msag_consistency": {
              "$ref": "#/definitions/MSAGConsistencyConf"
            },
            "nesting": {
              "$ref": "#/definitions/NestingConf"
            },
            "no_public_attributes": {
              "$ref": "#/definitions/NoPublicAttributesConf"
            },
            "object_naming": {
              "$ref": "#/definitions/ObjectNamingConf"
            },
            "obsolete_statement": {
              "$ref": "#/definitions/ObsoleteStatementConf"
            },
            "parser_error": {
              "$ref": "#/definitions/ParserErrorConf"
            },
            "preferred_compare_operator": {
              "$ref": "#/definitions/PreferredCompareOperatorConf"
            },
            "remove_descriptions": {
              "$ref": "#/definitions/RemoveDescriptionsConf"
            },
            "rfc_error_handling": {
              "$ref": "#/definitions/RFCErrorHandlingConf"
            },
            "sequential_blank": {
              "$ref": "#/definitions/SequentialBlankConf"
            },
            "short_case": {
              "$ref": "#/definitions/ShortCaseConf"
            },
            "space_before_colon": {
              "$ref": "#/definitions/SpaceBeforeColonConf"
            },
            "space_before_dot": {
              "$ref": "#/definitions/SpaceBeforeDotConf"
            },
            "start_at_tab": {
              "$ref": "#/definitions/StartAtTabConf"
            },
            "superclass_final": {
              "$ref": "#/definitions/SuperclassFinalConf"
            },
            "tabl_enhancement_category": {
              "$ref": "#/definitions/TABLEnhancementCategoryConf"
            },
            "type_form_parameters": {
              "$ref": "#/definitions/TypeFormParametersConf"
            },
            "unreachable_code": {
              "$ref": "#/definitions/UnreachableCodeConf"
            },
            "use_new": {
              "$ref": "#/definitions/UseNewConf"
            },
            "when_others_last": {
              "$ref": "#/definitions/WhenOthersLastConf"
            },
            "whitespace_end": {
              "$ref": "#/definitions/WhitespaceEndConf"
            }
          },
          "type": "object"
        },
        "syntax": {
          "$ref": "#/definitions/ISyntaxSettings"
        }
      },
      "required": [
        "global",
        "dependencies",
        "syntax",
        "rules"
      ],
      "type": "object"
    },
    "IDependency": {
      "additionalProperties": false,
      "properties": {
        "files": {
          "type": "string"
        },
        "folder": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "files"
      ],
      "type": "object"
    },
    "IGlobalConfig": {
      "additionalProperties": false,
      "properties": {
        "applyUnspecifiedRules": {
          "type": "boolean"
        },
        "files": {
          "type": "string"
        },
        "skipGeneratedFunctionGroups": {
          "type": "boolean"
        },
        "skipGeneratedGatewayClasses": {
          "type": "boolean"
        },
        "skipGeneratedPersistentClasses": {
          "type": "boolean"
        }
      },
      "required": [
        "files",
        "skipGeneratedGatewayClasses",
        "skipGeneratedPersistentClasses",
        "skipGeneratedFunctionGroups",
        "applyUnspecifiedRules"
      ],
      "type": "object"
    },
    "ISyntaxSettings": {
      "additionalProperties": false,
      "properties": {
        "errorNamespace": {
          "type": "string"
        },
        "globalConstants": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "globalMacros": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "version",
        "errorNamespace",
        "globalConstants",
        "globalMacros"
      ],
      "type": "object"
    },
    "IdenticalFormNamesConf": {
      "additionalProperties": false,
      "description": "Detects identically named forms.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IfInIfConf": {
      "additionalProperties": false,
      "description": "Detects nested ifs which can be refactored to a single condition using AND.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ImplementMethodsConf": {
      "additionalProperties": false,
      "description": "Chekcs for abstract methods which need implementing.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InStatementIndentationConf": {
      "additionalProperties": false,
      "description": "Checks alignment within block statement declarations which span multiple lines, such as multiple conditions in IF statements.\nExample:\nIF 1 = 1 AND\n  2 = 2.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreExceptions": {
          "type": "boolean"
        }
      },
      "required": [
        "ignoreExceptions"
      ],
      "type": "object"
    },
    "IndentationConf": {
      "additionalProperties": false,
      "properties": {
        "alignTryCatch": {
          "type": "boolean"
        },
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "globalClassSkipFirst": {
          "type": "boolean"
        },
        "ignoreExceptions": {
          "type": "boolean"
        },
        "ignoreGlobalClassDefinition": {
          "type": "boolean"
        },
        "ignoreGlobalInterface": {
          "type": "boolean"
        }
      },
      "required": [
        "ignoreExceptions",
        "alignTryCatch",
        "globalClassSkipFirst",
        "ignoreGlobalClassDefinition",
        "ignoreGlobalInterface"
      ],
      "type": "object"
    },
    "InlineDataOldVersionsConf": {
      "additionalProperties": false,
      "description": "Checks for inline data declarations in older releases.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "KeywordsUpperConf": {
      "additionalProperties": false,
      "description": "Detects keywords which are not uppercased.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreExceptions": {
          "type": "boolean"
        },
        "ignoreFunctionModuleName": {
          "type": "boolean"
        },
        "ignoreGlobalClassDefinition": {
          "type": "boolean"
        },
        "ignoreGlobalInterface": {
          "type": "boolean"
        },
        "ignoreLowerClassImplmentationStatement": {
          "type": "boolean"
        }
      },
      "required": [
        "ignoreExceptions",
        "ignoreLowerClassImplmentationStatement",
        "ignoreGlobalClassDefinition",
        "ignoreGlobalInterface",
        "ignoreFunctionModuleName"
      ],
      "type": "object"
    },
    "LineLengthConf": {
      "additionalProperties": false,
      "description": "Detects lines exceeding the provided maximum length.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "length": {
          "description": "Maximum line length in characters",
          "type": "number"
        }
      },
      "required": [
        "length"
      ],
      "type": "object"
    },
    "LineOnlyPuncConf": {
      "additionalProperties": false,
      "description": "Detects lines containing only punctuation.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreExceptions": {
          "type": "boolean"
        }
      },
      "required": [
        "ignoreExceptions"
      ],
      "type": "object"
    },
    "LocalClassNamingConf": {
      "additionalProperties": false,
      "description": "Allows you to enforce a pattern, such as a prefix, for local class names.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "local": {
          "description": "The pattern for local class names",
          "type": "string"
        },
        "test": {
          "description": "The pattern for local test class names",
          "type": "string"
        }
      },
      "required": [
        "local",
        "test"
      ],
      "type": "object"
    },
    "LocalTestclassLocationConf": {
      "additionalProperties": false,
      "description": "Chceks that local test classes are placed in the test include.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LocalVariableNamesConf": {
      "additionalProperties": false,
      "description": "Allows you to enforce a pattern, such as a prefix, for local variables, constants and field symbols.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "expectedConstant": {
          "description": "The pattern for local constant names",
          "type": "string"
        },
        "expectedData": {
          "description": "The pattern for local variable names",
          "type": "string"
        },
        "expectedFS": {
          "description": "The pattern for field symbol names",
          "type": "string"
        }
      },
      "required": [
        "expectedData",
        "expectedConstant",
        "expectedFS"
      ],
      "type": "object"
    },
    "MSAGConsistencyConf": {
      "additionalProperties": false,
      "description": "Checks the validity of messages in message classes",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MainFileContentsConf": {
      "additionalProperties": false,
      "description": "Checks related to report declarations.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MaxOneStatementConf": {
      "additionalProperties": false,
      "description": "Chekcks that each line contains only a single statement.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MessageExistsConf": {
      "additionalProperties": false,
      "description": "In message statements, check that the message class + id exist",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MethodLengthConf": {
      "additionalProperties": false,
      "description": "Chcecks that methods do not exceed the set number of statements",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "statements": {
          "description": "Maximum method length in statements",
          "type": "number"
        }
      },
      "required": [
        "statements"
      ],
      "type": "object"
    },
    "MethodParameterNamesConf": {
      "additionalProperties": false,
      "description": "Allows you to enforce a pattern, such as a prefix, for method parameter names",
      "properties": {
        "changing": {
          "description": "The pattern for changing parameters",
          "type": "string"
        },
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "exporting": {
          "description": "The pattern for exporting parameters",
          "type": "string"
        },
        "ignoreExceptions": {
          "description": "Ignore parameters in methods of exception classes",
          "type": "boolean"
        },
        "ignoreNames": {
          "description": "The following parameter names will be ignored",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "importing": {
          "description": "The pattern for importing parameters",
          "type": "string"
        },
        "returning": {
          "description": "The pattern for returning parameters",
          "type": "string"
        }
      },
      "required": [
        "ignoreExceptions",
        "importing",
        "returning",
        "changing",
        "exporting",
        "ignoreNames"
      ],
      "type": "object"
    },
    "MixReturningConf": {
      "additionalProperties": false,
      "description": "Checks that methods don't have a mixture of returning and exporting/changing parameters",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "NestingConf": {
      "additionalProperties": false,
      "description": "Checks for methods exceeding a maximum nesting depth",
      "properties": {
        "depth": {
          "description": "Maximum allowed nesting depth",
          "type": "number"
        },
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "depth"
      ],
      "type": "object"
    },
    "NoPublicAttributesConf": {
      "additionalProperties": false,
      "description": "Checks that classes don't contain any public attributes",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ObjectNamingConf": {
      "additionalProperties": false,
      "description": "Allows you to enforce a pattern, such as a prefix, for object names",
      "properties": {
        "auth": {
          "description": "The pattern for authorization object names",
          "type": "string"
        },
        "clas": {
          "description": "The pattern for global class names",
          "type": "string"
        },
        "doma": {
          "description": "The pattern for domain names",
          "type": "string"
        },
        "dtel": {
          "description": "The pattern for data element names",
          "type": "string"
        },
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "enqu": {
          "description": "The pattern for lock object names",
          "type": "string"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fugr": {
          "description": "The pattern for function group names",
          "type": "string"
        },
        "idoc": {
          "description": "The pattern for idoc names",
          "type": "string"
        },
        "intf": {
          "description": "The pattern for global interface names",
          "type": "string"
        },
        "msag": {
          "description": "The pattern for message class names",
          "type": "string"
        },
        "pinf": {
          "description": "The pattern for package interface names",
          "type": "string"
        },
        "prog": {
          "description": "The pattern for program (report) names",
          "type": "string"
        },
        "tabl": {
          "description": "The pattern for DDIC table names",
          "type": "string"
        },
        "tran": {
          "description": "The pattern for transaction names",
          "type": "string"
        },
        "ttyp": {
          "description": "The pattern for DDIC table type names",
          "type": "string"
        }
      },
      "required": [
        "clas",
        "intf",
        "prog",
        "fugr",
        "tabl",
        "ttyp",
        "dtel",
        "doma",
        "msag",
        "tran",
        "enqu",
        "auth",
        "pinf",
        "idoc"
      ],
      "type": "object"
    },
    "ObsoleteStatementConf": {
      "additionalProperties": false,
      "description": "Checks for usages of certain obsolete statements",
      "properties": {
        "add": {
          "type": "boolean"
        },
        "compute": {
          "type": "boolean"
        },
        "divide": {
          "type": "boolean"
        },
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "move": {
          "type": "boolean"
        },
        "multiply": {
          "type": "boolean"
        },
        "refresh": {
          "type": "boolean"
        },
        "requested": {
          "description": "Checks for usages of IS REQUESTED",
          "type": "boolean"
        },
        "subtract": {
          "type": "boolean"
        }
      },
      "required": [
        "refresh",
        "compute",
        "add",
        "subtract",
        "multiply",
        "move",
        "divide",
        "requested"
      ],
      "type": "object"
    },
    "ParserErrorConf": {
      "additionalProperties": false,
      "description": "Checks for syntax unrecognized by abaplint",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PreferredCompareOperatorConf": {
      "additionalProperties": false,
      "description": "Configure undesired operator variants",
      "properties": {
        "badOperators": {
          "description": "Operators which are not allowed",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "badOperators"
      ],
      "type": "object"
    },
    "RFCErrorHandlingConf": {
      "additionalProperties": false,
      "description": "Checks that exceptions 'system_failure' and 'communication_failure' are handled in RFC calls",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RemoveDescriptionsConf": {
      "additionalProperties": false,
      "description": "Ensures you have no descriptions in metadata of methods, parameters, etc. For class descriptions, see rule description_empty.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreExceptions": {
          "type": "boolean"
        }
      },
      "required": [
        "ignoreExceptions"
      ],
      "type": "object"
    },
    "SequentialBlankConf": {
      "additionalProperties": false,
      "description": "Checks that code does not contain more than the configured number of blank lines in a row.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "lines": {
          "description": "The maximum number of allowed blank lines in a row",
          "type": "number"
        }
      },
      "required": [
        "lines"
      ],
      "type": "object"
    },
    "SevenBitAsciiConf": {
      "additionalProperties": false,
      "description": "Only allow characters from the 7bit ASCII set.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ShortCaseConf": {
      "additionalProperties": false,
      "description": "Checks for CASE statements which have fewer than the specified number of branches",
      "properties": {
        "allow": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "length": {
          "description": "Minimum number of branches",
          "type": "number"
        }
      },
      "required": [
        "length",
        "allow"
      ],
      "type": "object"
    },
    "SpaceBeforeColonConf": {
      "additionalProperties": false,
      "description": "Checks that there are no spaces in front of colons in chained statements.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SpaceBeforeDotConf": {
      "additionalProperties": false,
      "description": "Checks for extra spaces before dots at the ends of statements .",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreExceptions": {
          "type": "boolean"
        },
        "ignoreGlobalDefinition": {
          "type": "boolean"
        }
      },
      "required": [
        "ignoreGlobalDefinition",
        "ignoreExceptions"
      ],
      "type": "object"
    },
    "StartAtTabConf": {
      "additionalProperties": false,
      "description": "Checks that statements start at tabstops.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SuperclassFinalConf": {
      "additionalProperties": false,
      "description": "Checks that classes which are inherited from are not declared as FINAL.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TABLEnhancementCategoryConf": {
      "additionalProperties": false,
      "description": "Checks that tables do not have the enhancement category 'not classified'",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TypeFormParametersConf": {
      "additionalProperties": false,
      "description": "Checks for untyped FORM parameters",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UnreachableCodeConf": {
      "additionalProperties": false,
      "description": "Checks for unreachable code.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UseNewConf": {
      "additionalProperties": false,
      "description": "Checks for deprecated CREATE OBJECT statements.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WhenOthersLastConf": {
      "additionalProperties": false,
      "description": "Checks that WHEN OTHERS is placed the last within a CASE statement.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WhitespaceEndConf": {
      "additionalProperties": false,
      "description": "Checks for redundant whitespace at the end of each line.",
      "properties": {
        "enabled": {
          "description": "Is the rule enabled?",
          "type": "boolean"
        },
        "exclude": {
          "description": "List of patterns to exclude",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  }
}