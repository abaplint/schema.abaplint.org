{
  "$ref": "#/definitions/ITranspilerConfig",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "ITranspilerConfig": {
      "additionalProperties": false,
      "properties": {
        "exclude_filter": {
          "description": "list of regex, case insensitive",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "input_filter": {
          "description": "list of regex, case insensitive, empty gives all files, positive list",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": true
        },
        "input_folder": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          ]
        },
        "libs": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "exclude_filter": {
                "description": "list of regex, case insensitive",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "uniqueItems": true
              },
              "files": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                ]
              },
              "folder": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "options": {
          "$ref": "#/definitions/ITranspilerOptions"
        },
        "output_folder": {
          "type": "string"
        },
        "write_source_map": {
          "type": "boolean"
        },
        "write_unit_tests": {
          "type": "boolean"
        }
      },
      "required": [
        "input_folder",
        "output_folder",
        "options"
      ],
      "type": "object"
    },
    "ITranspilerOptions": {
      "additionalProperties": false,
      "properties": {
        "addCommonJS": {
          "description": "adds common js modules",
          "type": "boolean"
        },
        "addFilenames": {
          "description": "adds filenames as comments in the output js",
          "type": "boolean"
        },
        "ignoreSourceMap": {
          "description": "ignore source map",
          "type": "boolean"
        },
        "ignoreSyntaxCheck": {
          "description": "ignore syntax check, used for internal testing",
          "type": "boolean"
        },
        "importProg": {
          "description": "import programs",
          "type": "boolean"
        },
        "keywords": {
          "description": "list of keywords to rename, if not supplied default will be used",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "populateTables": {
          "additionalProperties": false,
          "description": "populate tables, all tables are populated if undefined and they exist",
          "properties": {
            "reposrc": {
              "description": "insert into REPOSRC, skips if equals false",
              "type": "boolean"
            },
            "seosubco": {
              "description": "insert into SEOSUBCO, skips if equals false",
              "type": "boolean"
            },
            "seosubcodf": {
              "description": "insert into SEOSUBCODF, skips if equals false",
              "type": "boolean"
            },
            "seosubcotx": {
              "description": "insert into SEOSUBCOTX, skips if equals false",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "setup": {
          "additionalProperties": false,
          "description": "extra setup script to be executed during initialization",
          "properties": {
            "filename": {
              "type": "string"
            },
            "postFunction": {
              "type": "string"
            },
            "preFunction": {
              "type": "string"
            }
          },
          "required": [
            "filename"
          ],
          "type": "object"
        },
        "skip": {
          "$ref": "#/definitions/TestMethodList",
          "description": "list of unit tests to skip"
        },
        "skipVersionCheck": {
          "description": "skips version check, not recommended",
          "type": "boolean"
        },
        "unknownTypes": {
          "$ref": "#/definitions/UnknownTypesEnum",
          "description": "sets behavior for unknown types, either fail at compile- or run-time"
        }
      },
      "type": "object"
    },
    "TestMethodList": {
      "items": {
        "additionalProperties": false,
        "properties": {
          "class": {
            "pattern": "^[a-zA-Z0-9_\\/]+$",
            "type": "string"
          },
          "method": {
            "pattern": "^[a-zA-Z0-9_\\/]+$",
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "object": {
            "pattern": "^[a-zA-Z0-9_\\/]+$",
            "type": "string"
          }
        },
        "required": [
          "object",
          "class",
          "method"
        ],
        "type": "object"
      },
      "type": "array",
      "uniqueItems": true
    },
    "UnknownTypesEnum": {
      "enum": [
        "compileError",
        "runtimeError"
      ],
      "type": "string"
    }
  }
}

